// Generated by data binding compiler. Do not edit!
package com.example.fitx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.fitx.R;
import com.example.fitx.view_model.CreateAccountViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CreateAccountBinding extends ViewDataBinding {
  @NonNull
  public final TextView AccountCreationTextView;

  @NonNull
  public final Button Buttonlogin;

  @NonNull
  public final Spinner experiencelevellist;

  @NonNull
  public final Spinner sportlist;

  @NonNull
  public final EditText userAge;

  @NonNull
  public final EditText userEmail;

  @NonNull
  public final EditText userFirstName;

  @NonNull
  public final EditText userLastName;

  @NonNull
  public final EditText userWeight;

  @Bindable
  protected CreateAccountViewModel mUser;

  protected CreateAccountBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView AccountCreationTextView, Button Buttonlogin, Spinner experiencelevellist,
      Spinner sportlist, EditText userAge, EditText userEmail, EditText userFirstName,
      EditText userLastName, EditText userWeight) {
    super(_bindingComponent, _root, _localFieldCount);
    this.AccountCreationTextView = AccountCreationTextView;
    this.Buttonlogin = Buttonlogin;
    this.experiencelevellist = experiencelevellist;
    this.sportlist = sportlist;
    this.userAge = userAge;
    this.userEmail = userEmail;
    this.userFirstName = userFirstName;
    this.userLastName = userLastName;
    this.userWeight = userWeight;
  }

  public abstract void setUser(@Nullable CreateAccountViewModel user);

  @Nullable
  public CreateAccountViewModel getUser() {
    return mUser;
  }

  @NonNull
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.create_account, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CreateAccountBinding>inflateInternal(inflater, R.layout.create_account, root, attachToRoot, component);
  }

  @NonNull
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.create_account, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CreateAccountBinding>inflateInternal(inflater, R.layout.create_account, null, false, component);
  }

  public static CreateAccountBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CreateAccountBinding bind(@NonNull View view, @Nullable Object component) {
    return (CreateAccountBinding)bind(component, view, R.layout.create_account);
  }
}
