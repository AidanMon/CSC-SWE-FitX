// Generated by view binder compiler. Do not edit!
package com.example.fitx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitx.R;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FootballExplosiveStrengthFragBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView boxJumpsInfo;

  @NonNull
  public final ConstraintLayout boxJumpsLayout;

  @NonNull
  public final AppCompatButton boxJumpsPlayVideo;

  @NonNull
  public final TextView boxJumpsText;

  @NonNull
  public final AppCompatButton enterFullScreenButton;

  @NonNull
  public final TextView footballLowerBodyHeader;

  @NonNull
  public final TextView fullScreenNotice;

  @NonNull
  public final FrameLayout fullScreenViewContainer;

  @NonNull
  public final TextView inclineWeightedSitupsInfo;

  @NonNull
  public final ConstraintLayout inclineWeightedSitupsLayout;

  @NonNull
  public final AppCompatButton inclineWeightedSitupsPlayVideo;

  @NonNull
  public final TextView inclineWeightedSitupsText;

  @NonNull
  public final TextView medicineBallThrowSitupsInfo;

  @NonNull
  public final ConstraintLayout medicineBallThrowSitupsLayout;

  @NonNull
  public final AppCompatButton medicineBallThrowSitupsPlayVideo;

  @NonNull
  public final TextView medicineBallThrowSitupsText;

  @NonNull
  public final TextView powerCleansInfo;

  @NonNull
  public final ConstraintLayout powerCleansLayout;

  @NonNull
  public final AppCompatButton powerCleansPlayVideo;

  @NonNull
  public final TextView powerCleansText;

  @NonNull
  public final TextView pushupToBoxJumpInfo;

  @NonNull
  public final ConstraintLayout pushupToBoxJumpLayout;

  @NonNull
  public final AppCompatButton pushupToBoxJumpPlayVideo;

  @NonNull
  public final TextView pushupToBoxJumpText;

  @NonNull
  public final TextView snatchesInfo;

  @NonNull
  public final ConstraintLayout snatchesLayout;

  @NonNull
  public final AppCompatButton snatchesPlayVideo;

  @NonNull
  public final TextView snatchesText;

  @NonNull
  public final YouTubePlayerView theVideoPlayer;

  private FootballExplosiveStrengthFragBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView boxJumpsInfo, @NonNull ConstraintLayout boxJumpsLayout,
      @NonNull AppCompatButton boxJumpsPlayVideo, @NonNull TextView boxJumpsText,
      @NonNull AppCompatButton enterFullScreenButton, @NonNull TextView footballLowerBodyHeader,
      @NonNull TextView fullScreenNotice, @NonNull FrameLayout fullScreenViewContainer,
      @NonNull TextView inclineWeightedSitupsInfo,
      @NonNull ConstraintLayout inclineWeightedSitupsLayout,
      @NonNull AppCompatButton inclineWeightedSitupsPlayVideo,
      @NonNull TextView inclineWeightedSitupsText, @NonNull TextView medicineBallThrowSitupsInfo,
      @NonNull ConstraintLayout medicineBallThrowSitupsLayout,
      @NonNull AppCompatButton medicineBallThrowSitupsPlayVideo,
      @NonNull TextView medicineBallThrowSitupsText, @NonNull TextView powerCleansInfo,
      @NonNull ConstraintLayout powerCleansLayout, @NonNull AppCompatButton powerCleansPlayVideo,
      @NonNull TextView powerCleansText, @NonNull TextView pushupToBoxJumpInfo,
      @NonNull ConstraintLayout pushupToBoxJumpLayout,
      @NonNull AppCompatButton pushupToBoxJumpPlayVideo, @NonNull TextView pushupToBoxJumpText,
      @NonNull TextView snatchesInfo, @NonNull ConstraintLayout snatchesLayout,
      @NonNull AppCompatButton snatchesPlayVideo, @NonNull TextView snatchesText,
      @NonNull YouTubePlayerView theVideoPlayer) {
    this.rootView = rootView;
    this.boxJumpsInfo = boxJumpsInfo;
    this.boxJumpsLayout = boxJumpsLayout;
    this.boxJumpsPlayVideo = boxJumpsPlayVideo;
    this.boxJumpsText = boxJumpsText;
    this.enterFullScreenButton = enterFullScreenButton;
    this.footballLowerBodyHeader = footballLowerBodyHeader;
    this.fullScreenNotice = fullScreenNotice;
    this.fullScreenViewContainer = fullScreenViewContainer;
    this.inclineWeightedSitupsInfo = inclineWeightedSitupsInfo;
    this.inclineWeightedSitupsLayout = inclineWeightedSitupsLayout;
    this.inclineWeightedSitupsPlayVideo = inclineWeightedSitupsPlayVideo;
    this.inclineWeightedSitupsText = inclineWeightedSitupsText;
    this.medicineBallThrowSitupsInfo = medicineBallThrowSitupsInfo;
    this.medicineBallThrowSitupsLayout = medicineBallThrowSitupsLayout;
    this.medicineBallThrowSitupsPlayVideo = medicineBallThrowSitupsPlayVideo;
    this.medicineBallThrowSitupsText = medicineBallThrowSitupsText;
    this.powerCleansInfo = powerCleansInfo;
    this.powerCleansLayout = powerCleansLayout;
    this.powerCleansPlayVideo = powerCleansPlayVideo;
    this.powerCleansText = powerCleansText;
    this.pushupToBoxJumpInfo = pushupToBoxJumpInfo;
    this.pushupToBoxJumpLayout = pushupToBoxJumpLayout;
    this.pushupToBoxJumpPlayVideo = pushupToBoxJumpPlayVideo;
    this.pushupToBoxJumpText = pushupToBoxJumpText;
    this.snatchesInfo = snatchesInfo;
    this.snatchesLayout = snatchesLayout;
    this.snatchesPlayVideo = snatchesPlayVideo;
    this.snatchesText = snatchesText;
    this.theVideoPlayer = theVideoPlayer;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FootballExplosiveStrengthFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FootballExplosiveStrengthFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.football_explosive_strength_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FootballExplosiveStrengthFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boxJumpsInfo;
      TextView boxJumpsInfo = ViewBindings.findChildViewById(rootView, id);
      if (boxJumpsInfo == null) {
        break missingId;
      }

      id = R.id.boxJumpsLayout;
      ConstraintLayout boxJumpsLayout = ViewBindings.findChildViewById(rootView, id);
      if (boxJumpsLayout == null) {
        break missingId;
      }

      id = R.id.boxJumpsPlayVideo;
      AppCompatButton boxJumpsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (boxJumpsPlayVideo == null) {
        break missingId;
      }

      id = R.id.boxJumpsText;
      TextView boxJumpsText = ViewBindings.findChildViewById(rootView, id);
      if (boxJumpsText == null) {
        break missingId;
      }

      id = R.id.enterFullScreenButton;
      AppCompatButton enterFullScreenButton = ViewBindings.findChildViewById(rootView, id);
      if (enterFullScreenButton == null) {
        break missingId;
      }

      id = R.id.footballLowerBodyHeader;
      TextView footballLowerBodyHeader = ViewBindings.findChildViewById(rootView, id);
      if (footballLowerBodyHeader == null) {
        break missingId;
      }

      id = R.id.fullScreenNotice;
      TextView fullScreenNotice = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenNotice == null) {
        break missingId;
      }

      id = R.id.full_screen_view_container;
      FrameLayout fullScreenViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenViewContainer == null) {
        break missingId;
      }

      id = R.id.inclineWeightedSitupsInfo;
      TextView inclineWeightedSitupsInfo = ViewBindings.findChildViewById(rootView, id);
      if (inclineWeightedSitupsInfo == null) {
        break missingId;
      }

      id = R.id.inclineWeightedSitupsLayout;
      ConstraintLayout inclineWeightedSitupsLayout = ViewBindings.findChildViewById(rootView, id);
      if (inclineWeightedSitupsLayout == null) {
        break missingId;
      }

      id = R.id.inclineWeightedSitupsPlayVideo;
      AppCompatButton inclineWeightedSitupsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (inclineWeightedSitupsPlayVideo == null) {
        break missingId;
      }

      id = R.id.inclineWeightedSitupsText;
      TextView inclineWeightedSitupsText = ViewBindings.findChildViewById(rootView, id);
      if (inclineWeightedSitupsText == null) {
        break missingId;
      }

      id = R.id.medicineBallThrowSitupsInfo;
      TextView medicineBallThrowSitupsInfo = ViewBindings.findChildViewById(rootView, id);
      if (medicineBallThrowSitupsInfo == null) {
        break missingId;
      }

      id = R.id.medicineBallThrowSitupsLayout;
      ConstraintLayout medicineBallThrowSitupsLayout = ViewBindings.findChildViewById(rootView, id);
      if (medicineBallThrowSitupsLayout == null) {
        break missingId;
      }

      id = R.id.medicineBallThrowSitupsPlayVideo;
      AppCompatButton medicineBallThrowSitupsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (medicineBallThrowSitupsPlayVideo == null) {
        break missingId;
      }

      id = R.id.medicineBallThrowSitupsText;
      TextView medicineBallThrowSitupsText = ViewBindings.findChildViewById(rootView, id);
      if (medicineBallThrowSitupsText == null) {
        break missingId;
      }

      id = R.id.powerCleansInfo;
      TextView powerCleansInfo = ViewBindings.findChildViewById(rootView, id);
      if (powerCleansInfo == null) {
        break missingId;
      }

      id = R.id.powerCleansLayout;
      ConstraintLayout powerCleansLayout = ViewBindings.findChildViewById(rootView, id);
      if (powerCleansLayout == null) {
        break missingId;
      }

      id = R.id.powerCleansPlayVideo;
      AppCompatButton powerCleansPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (powerCleansPlayVideo == null) {
        break missingId;
      }

      id = R.id.powerCleansText;
      TextView powerCleansText = ViewBindings.findChildViewById(rootView, id);
      if (powerCleansText == null) {
        break missingId;
      }

      id = R.id.pushupToBoxJumpInfo;
      TextView pushupToBoxJumpInfo = ViewBindings.findChildViewById(rootView, id);
      if (pushupToBoxJumpInfo == null) {
        break missingId;
      }

      id = R.id.pushupToBoxJumpLayout;
      ConstraintLayout pushupToBoxJumpLayout = ViewBindings.findChildViewById(rootView, id);
      if (pushupToBoxJumpLayout == null) {
        break missingId;
      }

      id = R.id.pushupToBoxJumpPlayVideo;
      AppCompatButton pushupToBoxJumpPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (pushupToBoxJumpPlayVideo == null) {
        break missingId;
      }

      id = R.id.pushupToBoxJumpText;
      TextView pushupToBoxJumpText = ViewBindings.findChildViewById(rootView, id);
      if (pushupToBoxJumpText == null) {
        break missingId;
      }

      id = R.id.snatchesInfo;
      TextView snatchesInfo = ViewBindings.findChildViewById(rootView, id);
      if (snatchesInfo == null) {
        break missingId;
      }

      id = R.id.snatchesLayout;
      ConstraintLayout snatchesLayout = ViewBindings.findChildViewById(rootView, id);
      if (snatchesLayout == null) {
        break missingId;
      }

      id = R.id.snatchesPlayVideo;
      AppCompatButton snatchesPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (snatchesPlayVideo == null) {
        break missingId;
      }

      id = R.id.snatchesText;
      TextView snatchesText = ViewBindings.findChildViewById(rootView, id);
      if (snatchesText == null) {
        break missingId;
      }

      id = R.id.theVideoPlayer;
      YouTubePlayerView theVideoPlayer = ViewBindings.findChildViewById(rootView, id);
      if (theVideoPlayer == null) {
        break missingId;
      }

      return new FootballExplosiveStrengthFragBinding((NestedScrollView) rootView, boxJumpsInfo,
          boxJumpsLayout, boxJumpsPlayVideo, boxJumpsText, enterFullScreenButton,
          footballLowerBodyHeader, fullScreenNotice, fullScreenViewContainer,
          inclineWeightedSitupsInfo, inclineWeightedSitupsLayout, inclineWeightedSitupsPlayVideo,
          inclineWeightedSitupsText, medicineBallThrowSitupsInfo, medicineBallThrowSitupsLayout,
          medicineBallThrowSitupsPlayVideo, medicineBallThrowSitupsText, powerCleansInfo,
          powerCleansLayout, powerCleansPlayVideo, powerCleansText, pushupToBoxJumpInfo,
          pushupToBoxJumpLayout, pushupToBoxJumpPlayVideo, pushupToBoxJumpText, snatchesInfo,
          snatchesLayout, snatchesPlayVideo, snatchesText, theVideoPlayer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
