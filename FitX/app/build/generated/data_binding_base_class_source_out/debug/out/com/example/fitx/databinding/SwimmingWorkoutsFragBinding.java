// Generated by view binder compiler. Do not edit!
package com.example.fitx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitx.R;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SwimmingWorkoutsFragBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ConstraintLayout deadliftsLayout;

  @NonNull
  public final AppCompatButton deadliftsPlayVideo;

  @NonNull
  public final TextView deadliftsText;

  @NonNull
  public final AppCompatButton enterFullScreenButton;

  @NonNull
  public final ConstraintLayout flutterKicksLayout;

  @NonNull
  public final AppCompatButton flutterKicksPlayVideo;

  @NonNull
  public final TextView flutterKicksText;

  @NonNull
  public final TextView fullScreenNotice;

  @NonNull
  public final FrameLayout fullScreenViewContainer;

  @NonNull
  public final ConstraintLayout lungesLayout;

  @NonNull
  public final AppCompatButton lungesPlayVideo;

  @NonNull
  public final TextView lungesText;

  @NonNull
  public final ConstraintLayout planksLayout;

  @NonNull
  public final AppCompatButton planksPlayVideo;

  @NonNull
  public final TextView planksText;

  @NonNull
  public final ConstraintLayout pullUpsLayout;

  @NonNull
  public final AppCompatButton pullUpsPlayVideo;

  @NonNull
  public final TextView pullUpsText;

  @NonNull
  public final ConstraintLayout skullCrushersLayout;

  @NonNull
  public final AppCompatButton skullCrushersPlayVideo;

  @NonNull
  public final TextView skullCrushersText;

  @NonNull
  public final ConstraintLayout squatJumpsLayout;

  @NonNull
  public final AppCompatButton squatJumpsPlayVideo;

  @NonNull
  public final TextView squatJumpsText;

  @NonNull
  public final ConstraintLayout squatsLayout;

  @NonNull
  public final AppCompatButton squatsPlayVideo;

  @NonNull
  public final TextView squatsText;

  @NonNull
  public final TextView swimmingHeader;

  @NonNull
  public final YouTubePlayerView theVideoPlayer;

  private SwimmingWorkoutsFragBinding(@NonNull NestedScrollView rootView,
      @NonNull ConstraintLayout deadliftsLayout, @NonNull AppCompatButton deadliftsPlayVideo,
      @NonNull TextView deadliftsText, @NonNull AppCompatButton enterFullScreenButton,
      @NonNull ConstraintLayout flutterKicksLayout, @NonNull AppCompatButton flutterKicksPlayVideo,
      @NonNull TextView flutterKicksText, @NonNull TextView fullScreenNotice,
      @NonNull FrameLayout fullScreenViewContainer, @NonNull ConstraintLayout lungesLayout,
      @NonNull AppCompatButton lungesPlayVideo, @NonNull TextView lungesText,
      @NonNull ConstraintLayout planksLayout, @NonNull AppCompatButton planksPlayVideo,
      @NonNull TextView planksText, @NonNull ConstraintLayout pullUpsLayout,
      @NonNull AppCompatButton pullUpsPlayVideo, @NonNull TextView pullUpsText,
      @NonNull ConstraintLayout skullCrushersLayout,
      @NonNull AppCompatButton skullCrushersPlayVideo, @NonNull TextView skullCrushersText,
      @NonNull ConstraintLayout squatJumpsLayout, @NonNull AppCompatButton squatJumpsPlayVideo,
      @NonNull TextView squatJumpsText, @NonNull ConstraintLayout squatsLayout,
      @NonNull AppCompatButton squatsPlayVideo, @NonNull TextView squatsText,
      @NonNull TextView swimmingHeader, @NonNull YouTubePlayerView theVideoPlayer) {
    this.rootView = rootView;
    this.deadliftsLayout = deadliftsLayout;
    this.deadliftsPlayVideo = deadliftsPlayVideo;
    this.deadliftsText = deadliftsText;
    this.enterFullScreenButton = enterFullScreenButton;
    this.flutterKicksLayout = flutterKicksLayout;
    this.flutterKicksPlayVideo = flutterKicksPlayVideo;
    this.flutterKicksText = flutterKicksText;
    this.fullScreenNotice = fullScreenNotice;
    this.fullScreenViewContainer = fullScreenViewContainer;
    this.lungesLayout = lungesLayout;
    this.lungesPlayVideo = lungesPlayVideo;
    this.lungesText = lungesText;
    this.planksLayout = planksLayout;
    this.planksPlayVideo = planksPlayVideo;
    this.planksText = planksText;
    this.pullUpsLayout = pullUpsLayout;
    this.pullUpsPlayVideo = pullUpsPlayVideo;
    this.pullUpsText = pullUpsText;
    this.skullCrushersLayout = skullCrushersLayout;
    this.skullCrushersPlayVideo = skullCrushersPlayVideo;
    this.skullCrushersText = skullCrushersText;
    this.squatJumpsLayout = squatJumpsLayout;
    this.squatJumpsPlayVideo = squatJumpsPlayVideo;
    this.squatJumpsText = squatJumpsText;
    this.squatsLayout = squatsLayout;
    this.squatsPlayVideo = squatsPlayVideo;
    this.squatsText = squatsText;
    this.swimmingHeader = swimmingHeader;
    this.theVideoPlayer = theVideoPlayer;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static SwimmingWorkoutsFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SwimmingWorkoutsFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.swimming_workouts_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SwimmingWorkoutsFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deadliftsLayout;
      ConstraintLayout deadliftsLayout = ViewBindings.findChildViewById(rootView, id);
      if (deadliftsLayout == null) {
        break missingId;
      }

      id = R.id.deadliftsPlayVideo;
      AppCompatButton deadliftsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (deadliftsPlayVideo == null) {
        break missingId;
      }

      id = R.id.deadliftsText;
      TextView deadliftsText = ViewBindings.findChildViewById(rootView, id);
      if (deadliftsText == null) {
        break missingId;
      }

      id = R.id.enterFullScreenButton;
      AppCompatButton enterFullScreenButton = ViewBindings.findChildViewById(rootView, id);
      if (enterFullScreenButton == null) {
        break missingId;
      }

      id = R.id.flutterKicksLayout;
      ConstraintLayout flutterKicksLayout = ViewBindings.findChildViewById(rootView, id);
      if (flutterKicksLayout == null) {
        break missingId;
      }

      id = R.id.flutterKicksPlayVideo;
      AppCompatButton flutterKicksPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (flutterKicksPlayVideo == null) {
        break missingId;
      }

      id = R.id.flutterKicksText;
      TextView flutterKicksText = ViewBindings.findChildViewById(rootView, id);
      if (flutterKicksText == null) {
        break missingId;
      }

      id = R.id.fullScreenNotice;
      TextView fullScreenNotice = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenNotice == null) {
        break missingId;
      }

      id = R.id.full_screen_view_container;
      FrameLayout fullScreenViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenViewContainer == null) {
        break missingId;
      }

      id = R.id.lungesLayout;
      ConstraintLayout lungesLayout = ViewBindings.findChildViewById(rootView, id);
      if (lungesLayout == null) {
        break missingId;
      }

      id = R.id.lungesPlayVideo;
      AppCompatButton lungesPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (lungesPlayVideo == null) {
        break missingId;
      }

      id = R.id.lungesText;
      TextView lungesText = ViewBindings.findChildViewById(rootView, id);
      if (lungesText == null) {
        break missingId;
      }

      id = R.id.planksLayout;
      ConstraintLayout planksLayout = ViewBindings.findChildViewById(rootView, id);
      if (planksLayout == null) {
        break missingId;
      }

      id = R.id.planksPlayVideo;
      AppCompatButton planksPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (planksPlayVideo == null) {
        break missingId;
      }

      id = R.id.planksText;
      TextView planksText = ViewBindings.findChildViewById(rootView, id);
      if (planksText == null) {
        break missingId;
      }

      id = R.id.pullUpsLayout;
      ConstraintLayout pullUpsLayout = ViewBindings.findChildViewById(rootView, id);
      if (pullUpsLayout == null) {
        break missingId;
      }

      id = R.id.pullUpsPlayVideo;
      AppCompatButton pullUpsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (pullUpsPlayVideo == null) {
        break missingId;
      }

      id = R.id.pullUpsText;
      TextView pullUpsText = ViewBindings.findChildViewById(rootView, id);
      if (pullUpsText == null) {
        break missingId;
      }

      id = R.id.skullCrushersLayout;
      ConstraintLayout skullCrushersLayout = ViewBindings.findChildViewById(rootView, id);
      if (skullCrushersLayout == null) {
        break missingId;
      }

      id = R.id.skullCrushersPlayVideo;
      AppCompatButton skullCrushersPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (skullCrushersPlayVideo == null) {
        break missingId;
      }

      id = R.id.skullCrushersText;
      TextView skullCrushersText = ViewBindings.findChildViewById(rootView, id);
      if (skullCrushersText == null) {
        break missingId;
      }

      id = R.id.squatJumpsLayout;
      ConstraintLayout squatJumpsLayout = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsLayout == null) {
        break missingId;
      }

      id = R.id.squatJumpsPlayVideo;
      AppCompatButton squatJumpsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsPlayVideo == null) {
        break missingId;
      }

      id = R.id.squatJumpsText;
      TextView squatJumpsText = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsText == null) {
        break missingId;
      }

      id = R.id.squatsLayout;
      ConstraintLayout squatsLayout = ViewBindings.findChildViewById(rootView, id);
      if (squatsLayout == null) {
        break missingId;
      }

      id = R.id.squatsPlayVideo;
      AppCompatButton squatsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (squatsPlayVideo == null) {
        break missingId;
      }

      id = R.id.squatsText;
      TextView squatsText = ViewBindings.findChildViewById(rootView, id);
      if (squatsText == null) {
        break missingId;
      }

      id = R.id.swimmingHeader;
      TextView swimmingHeader = ViewBindings.findChildViewById(rootView, id);
      if (swimmingHeader == null) {
        break missingId;
      }

      id = R.id.theVideoPlayer;
      YouTubePlayerView theVideoPlayer = ViewBindings.findChildViewById(rootView, id);
      if (theVideoPlayer == null) {
        break missingId;
      }

      return new SwimmingWorkoutsFragBinding((NestedScrollView) rootView, deadliftsLayout,
          deadliftsPlayVideo, deadliftsText, enterFullScreenButton, flutterKicksLayout,
          flutterKicksPlayVideo, flutterKicksText, fullScreenNotice, fullScreenViewContainer,
          lungesLayout, lungesPlayVideo, lungesText, planksLayout, planksPlayVideo, planksText,
          pullUpsLayout, pullUpsPlayVideo, pullUpsText, skullCrushersLayout, skullCrushersPlayVideo,
          skullCrushersText, squatJumpsLayout, squatJumpsPlayVideo, squatJumpsText, squatsLayout,
          squatsPlayVideo, squatsText, swimmingHeader, theVideoPlayer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
