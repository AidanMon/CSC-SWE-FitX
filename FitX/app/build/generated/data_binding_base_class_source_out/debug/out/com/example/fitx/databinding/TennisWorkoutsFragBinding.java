// Generated by view binder compiler. Do not edit!
package com.example.fitx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitx.R;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TennisWorkoutsFragBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ConstraintLayout benchPressLayout;

  @NonNull
  public final AppCompatButton benchPressPlayVideo;

  @NonNull
  public final TextView benchPressText;

  @NonNull
  public final ConstraintLayout burpeesLayout;

  @NonNull
  public final AppCompatButton burpeesPlayVideo;

  @NonNull
  public final TextView burpeesText;

  @NonNull
  public final ConstraintLayout cableChestPressLayout;

  @NonNull
  public final AppCompatButton cableChestPressPlayVideo;

  @NonNull
  public final TextView cableChestPressText;

  @NonNull
  public final AppCompatButton enterFullScreenButton;

  @NonNull
  public final TextView fullScreenNotice;

  @NonNull
  public final FrameLayout fullScreenViewContainer;

  @NonNull
  public final ConstraintLayout lungesLayout;

  @NonNull
  public final AppCompatButton lungesPlayVideo;

  @NonNull
  public final TextView lungesText;

  @NonNull
  public final ConstraintLayout planksLayout;

  @NonNull
  public final AppCompatButton planksPlayVideo;

  @NonNull
  public final TextView planksText;

  @NonNull
  public final ConstraintLayout sprintsLayout;

  @NonNull
  public final AppCompatButton sprintsPlayVideo;

  @NonNull
  public final TextView sprintsText;

  @NonNull
  public final ConstraintLayout squatJumpsLayout;

  @NonNull
  public final AppCompatButton squatJumpsPlayVideo;

  @NonNull
  public final TextView squatJumpsText;

  @NonNull
  public final ConstraintLayout squatsLayout;

  @NonNull
  public final AppCompatButton squatsPlayVideo;

  @NonNull
  public final TextView squatsText;

  @NonNull
  public final TextView tennisHeader;

  @NonNull
  public final YouTubePlayerView theVideoPlayer;

  private TennisWorkoutsFragBinding(@NonNull NestedScrollView rootView,
      @NonNull ConstraintLayout benchPressLayout, @NonNull AppCompatButton benchPressPlayVideo,
      @NonNull TextView benchPressText, @NonNull ConstraintLayout burpeesLayout,
      @NonNull AppCompatButton burpeesPlayVideo, @NonNull TextView burpeesText,
      @NonNull ConstraintLayout cableChestPressLayout,
      @NonNull AppCompatButton cableChestPressPlayVideo, @NonNull TextView cableChestPressText,
      @NonNull AppCompatButton enterFullScreenButton, @NonNull TextView fullScreenNotice,
      @NonNull FrameLayout fullScreenViewContainer, @NonNull ConstraintLayout lungesLayout,
      @NonNull AppCompatButton lungesPlayVideo, @NonNull TextView lungesText,
      @NonNull ConstraintLayout planksLayout, @NonNull AppCompatButton planksPlayVideo,
      @NonNull TextView planksText, @NonNull ConstraintLayout sprintsLayout,
      @NonNull AppCompatButton sprintsPlayVideo, @NonNull TextView sprintsText,
      @NonNull ConstraintLayout squatJumpsLayout, @NonNull AppCompatButton squatJumpsPlayVideo,
      @NonNull TextView squatJumpsText, @NonNull ConstraintLayout squatsLayout,
      @NonNull AppCompatButton squatsPlayVideo, @NonNull TextView squatsText,
      @NonNull TextView tennisHeader, @NonNull YouTubePlayerView theVideoPlayer) {
    this.rootView = rootView;
    this.benchPressLayout = benchPressLayout;
    this.benchPressPlayVideo = benchPressPlayVideo;
    this.benchPressText = benchPressText;
    this.burpeesLayout = burpeesLayout;
    this.burpeesPlayVideo = burpeesPlayVideo;
    this.burpeesText = burpeesText;
    this.cableChestPressLayout = cableChestPressLayout;
    this.cableChestPressPlayVideo = cableChestPressPlayVideo;
    this.cableChestPressText = cableChestPressText;
    this.enterFullScreenButton = enterFullScreenButton;
    this.fullScreenNotice = fullScreenNotice;
    this.fullScreenViewContainer = fullScreenViewContainer;
    this.lungesLayout = lungesLayout;
    this.lungesPlayVideo = lungesPlayVideo;
    this.lungesText = lungesText;
    this.planksLayout = planksLayout;
    this.planksPlayVideo = planksPlayVideo;
    this.planksText = planksText;
    this.sprintsLayout = sprintsLayout;
    this.sprintsPlayVideo = sprintsPlayVideo;
    this.sprintsText = sprintsText;
    this.squatJumpsLayout = squatJumpsLayout;
    this.squatJumpsPlayVideo = squatJumpsPlayVideo;
    this.squatJumpsText = squatJumpsText;
    this.squatsLayout = squatsLayout;
    this.squatsPlayVideo = squatsPlayVideo;
    this.squatsText = squatsText;
    this.tennisHeader = tennisHeader;
    this.theVideoPlayer = theVideoPlayer;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static TennisWorkoutsFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TennisWorkoutsFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tennis_workouts_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TennisWorkoutsFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.benchPressLayout;
      ConstraintLayout benchPressLayout = ViewBindings.findChildViewById(rootView, id);
      if (benchPressLayout == null) {
        break missingId;
      }

      id = R.id.benchPressPlayVideo;
      AppCompatButton benchPressPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (benchPressPlayVideo == null) {
        break missingId;
      }

      id = R.id.benchPressText;
      TextView benchPressText = ViewBindings.findChildViewById(rootView, id);
      if (benchPressText == null) {
        break missingId;
      }

      id = R.id.burpeesLayout;
      ConstraintLayout burpeesLayout = ViewBindings.findChildViewById(rootView, id);
      if (burpeesLayout == null) {
        break missingId;
      }

      id = R.id.burpeesPlayVideo;
      AppCompatButton burpeesPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (burpeesPlayVideo == null) {
        break missingId;
      }

      id = R.id.burpeesText;
      TextView burpeesText = ViewBindings.findChildViewById(rootView, id);
      if (burpeesText == null) {
        break missingId;
      }

      id = R.id.cableChestPressLayout;
      ConstraintLayout cableChestPressLayout = ViewBindings.findChildViewById(rootView, id);
      if (cableChestPressLayout == null) {
        break missingId;
      }

      id = R.id.cableChestPressPlayVideo;
      AppCompatButton cableChestPressPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (cableChestPressPlayVideo == null) {
        break missingId;
      }

      id = R.id.cableChestPressText;
      TextView cableChestPressText = ViewBindings.findChildViewById(rootView, id);
      if (cableChestPressText == null) {
        break missingId;
      }

      id = R.id.enterFullScreenButton;
      AppCompatButton enterFullScreenButton = ViewBindings.findChildViewById(rootView, id);
      if (enterFullScreenButton == null) {
        break missingId;
      }

      id = R.id.fullScreenNotice;
      TextView fullScreenNotice = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenNotice == null) {
        break missingId;
      }

      id = R.id.full_screen_view_container;
      FrameLayout fullScreenViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (fullScreenViewContainer == null) {
        break missingId;
      }

      id = R.id.lungesLayout;
      ConstraintLayout lungesLayout = ViewBindings.findChildViewById(rootView, id);
      if (lungesLayout == null) {
        break missingId;
      }

      id = R.id.lungesPlayVideo;
      AppCompatButton lungesPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (lungesPlayVideo == null) {
        break missingId;
      }

      id = R.id.lungesText;
      TextView lungesText = ViewBindings.findChildViewById(rootView, id);
      if (lungesText == null) {
        break missingId;
      }

      id = R.id.planksLayout;
      ConstraintLayout planksLayout = ViewBindings.findChildViewById(rootView, id);
      if (planksLayout == null) {
        break missingId;
      }

      id = R.id.planksPlayVideo;
      AppCompatButton planksPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (planksPlayVideo == null) {
        break missingId;
      }

      id = R.id.planksText;
      TextView planksText = ViewBindings.findChildViewById(rootView, id);
      if (planksText == null) {
        break missingId;
      }

      id = R.id.sprintsLayout;
      ConstraintLayout sprintsLayout = ViewBindings.findChildViewById(rootView, id);
      if (sprintsLayout == null) {
        break missingId;
      }

      id = R.id.sprintsPlayVideo;
      AppCompatButton sprintsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (sprintsPlayVideo == null) {
        break missingId;
      }

      id = R.id.sprintsText;
      TextView sprintsText = ViewBindings.findChildViewById(rootView, id);
      if (sprintsText == null) {
        break missingId;
      }

      id = R.id.squatJumpsLayout;
      ConstraintLayout squatJumpsLayout = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsLayout == null) {
        break missingId;
      }

      id = R.id.squatJumpsPlayVideo;
      AppCompatButton squatJumpsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsPlayVideo == null) {
        break missingId;
      }

      id = R.id.squatJumpsText;
      TextView squatJumpsText = ViewBindings.findChildViewById(rootView, id);
      if (squatJumpsText == null) {
        break missingId;
      }

      id = R.id.squatsLayout;
      ConstraintLayout squatsLayout = ViewBindings.findChildViewById(rootView, id);
      if (squatsLayout == null) {
        break missingId;
      }

      id = R.id.squatsPlayVideo;
      AppCompatButton squatsPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (squatsPlayVideo == null) {
        break missingId;
      }

      id = R.id.squatsText;
      TextView squatsText = ViewBindings.findChildViewById(rootView, id);
      if (squatsText == null) {
        break missingId;
      }

      id = R.id.tennisHeader;
      TextView tennisHeader = ViewBindings.findChildViewById(rootView, id);
      if (tennisHeader == null) {
        break missingId;
      }

      id = R.id.theVideoPlayer;
      YouTubePlayerView theVideoPlayer = ViewBindings.findChildViewById(rootView, id);
      if (theVideoPlayer == null) {
        break missingId;
      }

      return new TennisWorkoutsFragBinding((NestedScrollView) rootView, benchPressLayout,
          benchPressPlayVideo, benchPressText, burpeesLayout, burpeesPlayVideo, burpeesText,
          cableChestPressLayout, cableChestPressPlayVideo, cableChestPressText,
          enterFullScreenButton, fullScreenNotice, fullScreenViewContainer, lungesLayout,
          lungesPlayVideo, lungesText, planksLayout, planksPlayVideo, planksText, sprintsLayout,
          sprintsPlayVideo, sprintsText, squatJumpsLayout, squatJumpsPlayVideo, squatJumpsText,
          squatsLayout, squatsPlayVideo, squatsText, tennisHeader, theVideoPlayer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
